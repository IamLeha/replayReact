{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/react-way-of-samurai/src/components/Login/Login.tsx\";\nimport React from 'react';\nimport { reduxForm } from \"redux-form\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, createField(\"Email\", 'email', [required], Input), createField(\"Password\", \"password\", [required], Input, {\n    type: \"password\"\n  }), createField(undefined, \"rememberMe\", [], Input, {\n    type: \"checkbox\"\n  }, \"remember me\"), captchaUrl && React.createElement(\"img\", {\n    src: captchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}), error && React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Login\"), React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/dima/Desktop/react-way-of-samurai/src/components/Login/Login.tsx"],"names":["React","reduxForm","createField","Input","required","connect","login","Redirect","style","LoginForm","handleSubmit","error","captchaUrl","type","undefined","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oDAAlB;;AAUA,MAAMC,SAAkG,GAClG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACzC,SACI;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,WAAW,CAA0B,OAA1B,EAAmC,OAAnC,EAA4C,CAACE,QAAD,CAA5C,EAAwDD,KAAxD,CADhB,EAEKD,WAAW,CAA0B,UAA1B,EAAsC,UAAtC,EAAkD,CAACE,QAAD,CAAlD,EAA8DD,KAA9D,EAAqE;AAACU,IAAAA,IAAI,EAAE;AAAP,GAArE,CAFhB,EAGKX,WAAW,CAA0BY,SAA1B,EAAqC,YAArC,EAAmD,EAAnD,EAAuDX,KAAvD,EAA8D;AAACU,IAAAA,IAAI,EAAE;AAAP,GAA9D,EAAkF,aAAlF,CAHhB,EAKMD,UAAU,IAAI;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALpB,EAMMA,UAAU,IAAKV,WAAW,CAA0B,oBAA1B,EAAgD,SAAhD,EAA2D,CAACE,QAAD,CAA3D,EAAuED,KAAvE,EAA8E,EAA9E,CANhC,EASKQ,KAAK,IAAI;AAAK,IAAA,SAAS,EAAEH,KAAK,CAACO,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLJ,KADK,CATd,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbJ,CADJ;AAmBH,CArBD;;AAuBA,MAAMK,cAAc,GAAGf,SAAS,CAAyC;AAACgB,EAAAA,IAAI,EAAE;AAAP,CAAzC,CAAT,CAAmER,SAAnE,CAAvB;;AAqBA,MAAMS,KAAyD,GAAIC,KAAD,IAAW;AACzE,QAAMC,QAAQ,GAAIC,QAAD,IAAmC;AAChDF,IAAAA,KAAK,CAACb,KAAN,CAAYe,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD,EAAoEH,QAAQ,CAACI,OAA7E;AACH,GAFD;;AAIA,MAAIN,KAAK,CAACO,MAAV,EAAkB;AACd,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,EAEH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEN,QAA1B;AAAoC,IAAA,UAAU,EAAED,KAAK,CAACP,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CAbD;;AAcA,MAAMe,eAAe,GAAIC,KAAD,KAA6C;AACjEhB,EAAAA,UAAU,EAAEgB,KAAK,CAACC,IAAN,CAAWjB,UAD0C;AAEjEc,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAF8C,CAA7C,CAAxB;;AAKA,eAAerB,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAkCY,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\nimport {AppStateType} from '../../redux/redux-store';\n\ntype LoginFormOwnProps = {\n    captchaUrl: string | null\n}\n\n\n\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps>\n    = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField<LoginFormValuesTypeKeys>(\"Email\", 'email', [required], Input)}\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            { captchaUrl && <img src={captchaUrl} />}\n            { captchaUrl &&  createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\n\ntype MapStatePropsType = {\n    captchaUrl: string | null\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\nexport type LoginFormValuesType = {\n    captcha: string\n    rememberMe: boolean\n    password: string\n    email: string\n}\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\n\n\n\n\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\n    const onSubmit = (formData: LoginFormValuesType) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);\n"]},"metadata":{},"sourceType":"module"}