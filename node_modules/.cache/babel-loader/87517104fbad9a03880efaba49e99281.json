{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  profile: null,\n  status: '',\n  newPostText: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(p => p.id != action.postId)\n      };\n\n    case SAVE_PHOTO_SUCCESS:\n      return { ...state,\n        profile: { ...state.profile,\n          photos: action.photos\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  try {\n    let response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  } catch (error) {//\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit(\"edit-profile\", {\n      _error: response.data.messages[0]\n    }));\n    return Promise.reject(response.data.messages[0]);\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/dima/Desktop/react-way-of-samurai/src/redux/profile-reducer.ts"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","profile","status","newPostText","profileReducer","state","action","type","newPost","filter","p","postId","photos","addPostActionCreator","setUserProfile","setStatus","deletePost","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","error","savePhoto","file","saveProfile","getState","auth","_error","messages","Promise","reject"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {PhotosType, PostType, ProfileType} from '../types/types';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\n        {id: 3, message: 'Blabla', likesCount: 11},\n        {id: 4, message: 'Dada', likesCount: 11}\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: '',\n    newPostText: ''\n};\nexport type InitialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile}\n        }\n\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n\n        case SAVE_PHOTO_SUCCESS:\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\n        default:\n            return state;\n    }\n}\n\n\ntype AddPostActionCreatorActionType = {\n    type: typeof ADD_POST\n    newPostText: string\n}\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\ntype SetUserProfileActionType = {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType\n}\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\ntype SetStatusActionType = {\n    type: typeof SET_STATUS\n    status: string\n}\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\ntype DeletePostActionType = {\n    type: typeof DELETE_POST\n    postId: number\n}\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\ntype SavePhotoSuccessActionType = {\n    type: typeof SAVE_PHOTO_SUCCESS\n    photos: PhotosType\n}\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\n\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    try {\n        let response = await profileAPI.updateStatus(status);\n\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    } catch(error) {\n        //\n    }\n}\nexport const savePhoto = (file: any) => async (dispatch: any) => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}