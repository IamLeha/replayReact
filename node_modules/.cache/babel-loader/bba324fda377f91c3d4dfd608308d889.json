{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/dima/Desktop/react-way-of-samurai/src/redux/app-reducer.ts"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAOA,IAAIC,YAA8B,GAAG;AACjCC,EAAAA,WAAW,EAAE;AADoB,CAArC;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAyD;AACxE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAkBA,OAAO,MAAMG,kBAAkB,GAAG,OAAqC;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAArC,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAmB;AAClD,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CAPM;AAUP,eAAeJ,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nexport type InitialStateType = {\n    initialized: boolean\n}\n\nlet initialState: InitialStateType = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\ntype InitializedSuccessActionType = {\n    type: typeof INITIALIZED_SUCCESS //'INITIALIZED_SUCCESS'\n}\n\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(getAuthUserData());\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;\n"]},"metadata":{},"sourceType":"module"}