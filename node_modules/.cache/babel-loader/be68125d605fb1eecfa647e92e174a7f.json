{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n\n  getProfile(userId) {\n    console.warn('Obsolete method. Please profileAPI object.');\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append(\"image\", photoFile);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n\n  saveProfile(profile) {\n    return instance.put(`profile`, profile);\n  }\n\n};\nexport let ResultCodesEnum;\n\n(function (ResultCodesEnum) {\n  ResultCodesEnum[ResultCodesEnum[\"Success\"] = 0] = \"Success\";\n  ResultCodesEnum[ResultCodesEnum[\"Error\"] = 1] = \"Error\";\n})(ResultCodesEnum || (ResultCodesEnum = {}));\n\nexport let ResultCodeForCapctha;\n\n(function (ResultCodeForCapctha) {\n  ResultCodeForCapctha[ResultCodeForCapctha[\"CaptchaIsRequired\"] = 10] = \"CaptchaIsRequired\";\n})(ResultCodeForCapctha || (ResultCodeForCapctha = {}));\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`).then(res => res.data);\n  },\n\n  login(email, password, rememberMe = false, captcha = null) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    }).then(res => res.data);\n  },\n\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`);\n  }\n\n};","map":{"version":3,"sources":["/home/dima/Desktop/react-way-of-samurai/src/api/api.ts"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","ResultCodesEnum","ResultCodeForCapctha","authAPI","me","res","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import axios, {AxiosResponse} from \"axios\";\nimport {ProfileType} from '../types/types';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile: any) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile: ProfileType) {\n        return instance.put(`profile`, profile );\n    }\n}\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCapctha {\n    CaptchaIsRequired = 10\n}\n\n\ntype MeResponseType = {\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n    resultCode: ResultCodesEnum\n    messages: Array<string>\n}\n\ntype LoginResponseType = {\n    data: {\n        userId: number\n    }\n    resultCode: ResultCodesEnum | ResultCodeForCapctha\n    messages: Array<string>\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get<MeResponseType>(`auth/me`).then(res => res.data);\n    },\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null ) {\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha })\n            .then(res => res.data);\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}